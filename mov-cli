#!/bin/sh

c_red="\033[1;31m"
c_green="\033[1;32m"
c_yellow="\033[1;33m"
c_blue="\033[1;34m"                                         c_magenta="\033[1;35m"
c_cyan="\033[1;36m"
c_reset="\033[0m"

help_text () {
        while IFS= read -r line; do
	    printf "%s\n" "$line"
	done <<-EOF
	Usage:
	    ${0##*/} [-d | -p <download_dir>] [<query>]
	    ${0##*/} [-v] [<query>]
	    ${0##*/} -h
	
	Options:
	    -h show helptext
	    -d download episode
	    -p download episode to specified directory
	    -v use VLC as the media player
	EOF
}

die () {
	printf "$c_red%s$c_reset\n" "$*" >&2
	exit 0
}

err () {
	printf "$c_red%s$c_reset\n" "$*" >&2
}

get_query () {
	if [ -z "$*" ]; then 
		printf "search movie:"
		read -r movie
	else
		movie=$*
	fi
}

stream () {
	case $player_fn in 
		vlc)
			setsid -f "$player_fn" --http-referrer="$base_url" "$1" > /dev/null 2>&1;;
		mpv)
			setsid -f "$player_fn" --referrer="$base_url" "$1" --force-media-title="$2" > /dev/null 2>&1;;
	esac
}

download () {
	printf "${c_blue}Downloading %s${c_reset}\n" "$2"
	aria2c --summary-interval=0 -x 16 -s 16 --referer="$base_url" "$1" --dir="$download_dir" -o "$2.mp4" --download-result=hide
}

search_movie () {
	query=$(printf "%s" "$movie" | tr " " "+")
	results=$(curl -s "$base_url/movies/trending?search=$query" | sed "s/$movie.*//" | tr '{|}' '\n' | sed -nE 's/^\"name\":"([^"]*)",.*orig.*\"id\":(.*),.*available\":true.*/\2 \1/p' | tr "[:punct:]" " " | tr -s " " | tr ' |[:upper:]' '-|[:lower:]')
}

open_movie () {
	display_id=$(printf "%s" "$selection_id" | cut -d\- -f2- | tr "-" " ")
	video_link="$(curl -s "$base_url/movie/$selection_id" | sed -nE 's_.*videoUrl\":"([^"]*)".*recom.*_\1_p' | sed 's_\\u0026_\&_g')"	
	if [ "$is_download" -eq "0" ];then
		stream "$video_link" "$display_id"
	else
		download "$video_link" "$display_id"
	fi
}


base_url="https://theflix.to"
player_fn="mpv"
is_download=0
download_dir=Videos

while getopts 'hdp:v' OPT; do
        case $OPT in
                h)
                        help_text
                        exit 0
                        ;;
                d)
                        is_download=1
                        ;;
                p)
                        is_download=1
			download_dir=$OPTARG
                        ;;
                v)
                        player_fn="vlc"
                        ;;
	esac
done
shift $((OPTIND - 1))

get_query "$*"
search_movie
[ -z "$results" ] && die "No search results found"
selection_id=$(printf "$results" | fzf)
open_movie 

while :; do
        printf "\n${c_green}Currently playing %s\n" "$display_id"
        printf "$c_blue[${c_cyan}%s$c_blue] $c_yellow%s$c_reset\n" "s" "search next movie"
        printf "$c_blue[${c_cyan}%s$c_blue] $c_magenta%s$c_reset\n" "d" "download current movie"
       printf "$c_blue[${c_cyan}%s$c_blue] $c_red%s$c_reset\n" "q" "exit"
        printf "${c_blue}Enter choice:${c_green} "
        read choice
        printf "$c_reset"
        case $choice in
                s)
			get_query
			search_movie
			[ -z "$results" ] && die "No search results found"
			selection_id=$(printf "$results" | fzf)
			open_movie
			;;
                d)
			download "$video_link" "$display_id";;
                q)
                        break;;
                *)
                        err "invalid choice";;
        esac
done
